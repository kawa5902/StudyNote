# Complex Survey

一般に大規模な学力調査は，単純な無作為抽出ではなく，
最初に学校を抽出し，その後に生徒を抽出するといった
多段抽出であることが多いです。
こうした複雑な抽出法（Complex Survey）に関するメモです。

## 母集団と標本の作成

最初に母集団と標本を作成します。
ちょっと長くなるのでコードは畳んで，標本だけ表示します。

設定としては，以下のような感じ。

- 母集団の学校数は10校。
- 学校は3つの層（strata）に分かれており，それぞれで平均学力，生徒数が異なる。
- スコアは学校ごとに平均値が異なる。
- 各学校の生徒には性別（MとF）を設定する。割当は無作為。
- 性別によってスコアが異なる。Mの方が10ポイント高い。
- 標本は，各層から2校ずつ学校を選び，さらに選ばれた学校から10人ずつを選ぶとする。

```{r}
#| code-fold: true
set.seed(123)
options(scipen = 999) # scipenを大きな値に設定

# 学校層のデータを生成
sch_str <- data.frame(
  sch = 1:10, # 学校ID
  str = c(rep(1, 4), rep(2, 4), rep(3, 2)), # 各層に2〜4校
  m_scr = c(70, 75, 80, 75, 55, 60, 50, 45, 35, 30), # 学校ごとの平均スコア
  pop_sz = c(110, 90, 80, 70, 40, 40, 30, 20, 15, 10) # 生徒数
)

# 母集団データを生成
gen_pop <- function(str_data) {
  do.call(rbind, lapply(1:nrow(str_data), function(i) {
    data.frame(
      sch = rep(str_data$sch[i], str_data$pop_sz[i]),
      str = rep(str_data$str[i], str_data$pop_sz[i]),
      sid = seq_len(str_data$pop_sz[i]),
      scr = round(rnorm(str_data$pop_sz[i], mean = str_data$m_scr[i], sd = 5) / 5) * 5,
      gen = sample(c("M", "F"), str_data$pop_sz[i], replace = TRUE, prob = c(0.5, 0.5))
    )
  }))
}

pop <- gen_pop(sch_str)

# 層別に学校をサンプリング
samp_sch <- function(pop, str_data, n_sch = 2) {
  sel_sch <- do.call(c, lapply(unique(pop$str), function(s) {
    str_sch <- unique(pop$sch[pop$str == s])
    sample(str_sch, size = n_sch)
  }))
  subset(pop, sch %in% sel_sch)
}

samp1 <- samp_sch(pop, sch_str)

# 各学校から生徒をランダムサンプリング
samp_stu <- function(samp1, n_stu = 10) {
  do.call(rbind, lapply(unique(samp1$sch), function(s) {
    sch_data <- subset(samp1, sch == s)
    sch_data[sample(seq_len(nrow(sch_data)), size = n_stu), ]
  }))
}

samp <- samp_stu(samp1)

# 抽出確率とウェイトの計算
calc_wt <- function(samp, str_data) {
  str_cnt <- table(str_data$str) # 層内の学校数
  samp$p_sch <- 2 / str_cnt[as.character(samp$str)] # 学校の抽出確率
  samp$p_stu <- 10 / str_data$pop_sz[match(samp$sch, str_data$sch)] # 生徒の抽出確率
  samp$p_tot <- samp$p_sch * samp$p_stu # 総抽出確率
  samp$wt <- 1 / samp$p_tot # ウェイト

  # fpc設定
  samp$fpc1 <- str_cnt[as.character(samp$str)] # 層内の学校数
  samp$fpc2 <- str_data$pop_sz[match(samp$sch, str_data$sch)] # 学校内の生徒数
  samp
}

samp <- calc_wt(samp, sch_str)

# スコア補正（女性の場合に+10）
adj_scr <- function(data) {
  data$scr <- data$scr + ifelse(data$gen == "F", 10, 0)
  data
}

pop <- adj_scr(pop)
samp <- adj_scr(samp)

# 結果を確認
samp
```

## ウェイトと調査デザインの重要性

### 標本平均とウェイト

最初に，標本の平均を確認しておきます。
かなり無茶な設定[^1]なので，当然ですが標本平均と母集団の平均は乖離します。
この乖離を防ぐには，`weighted.mean`関数でウェイトを利用する必要があります。

[^1]: そもそも母集団が小さいですし，この方法では
  規模の大きい学校の生徒ほど選ばれにくいという問題もあります。
  実際，標本では規模の大きい学校で，明らかに`wt`が大きくなっています。

```{r}
mean(pop$scr) # 母集団の平均
mean(samp$scr) # 標本の平均
weighted.mean(samp$scr, samp$wt) # 重みづけた平均
```

ウェイトを使うことで，母集団の平均値は推定できます。
問題は標準誤差（Standard Error: SE）です。
SEを算出するには，ウェイトだけでは不十分で，
調査デザインを考慮する必要があります。

### 調査デザインと標準誤差の推定
Rでは，[survey](https://cran.r-project.org/web/packages/survey/index.html)を使うことで，
Complex Surveyの推定を行うことができます。
surveyでは，最初に`svydesign`関数で調査デザインを指定した後に，
`svymean`や`svyby`といった関数で推定を行うことができます。

ここでは，いくつかの調査デザインを設定し，
それぞれでSEがどのように変化するか検討してみます。

#### 無作為抽出

無作為抽出の場合，`ids = ~1`（あるいは，`ids = ~0`）を指定します。

```{r}
# 無作為抽出
des0 <- survey::svydesign(ids = ~1, data = samp, weights = ~wt)
survey::svymean(~scr, des0)
```

一応推定は可能ですが，今回の調査デザインは無作為抽出ではありません。
一般に，同じ学校の生徒は似通っていると考えられます。
無作為抽出では，個々の生徒はそれぞれ独立（≒まったく違う特徴を持つ）
ことが前提とされていますが，学校を単位とした抽出では
その前提が破られています。
そのため無作為抽出を前提とした推定では，SEが過小評価されていると考えられます。

#### クラスターサンプリング

続いて，学校を無作為に選び，選ばれた学校のすべての生徒を調査した状態
（クラスターサンプリング）を考えます。
これは`ids`にクラスターとなる変数を設定することで表現できます。

```{r}
# クラスターサンプリング
des1 <- survey::svydesign(ids = ~sch, data = samp, weights = ~wt)
survey::svymean(~scr, des1)
```

推定値は同じですが，SEは大きくなっています。

#### 層化クラスターサンプリング

ただ，クラスターサンプリングは今回の抽出法ではありません。
今回は，個々の学校が層（strata）に属しています。
個々の層で学校の平均点・生徒数がかなり異なるので，
個々の学校を無作為に抽出するより，
各層から学校を2校ずつ抽出したほうが，より正確に母集団の実態を反映できる
（≒SEが小さくなる）ことが期待できます。
`svydesign`では，`strata`に層となる変数を設定することで，
層化抽出であることを表現できます。

```{r}
# 層化クラスターサンプリング
des2 <- survey::svydesign(ids = ~sch, strata = ~str, data = samp, weights = ~wt)
survey::svymean(~scr, des2)
```

理論通り，SEが小さくなっています。


#### fpc（有限母集団補正）を考慮する

統計の入門書では，母集団の人数は無限であることが想定されていますが，
一般の社会調査では母集団は有限です
（さらに言えば，同じ調査対象は再び調査しません）。
極端な話，母集団が10人しかいなければ，
10人全員に調査をするとSEは0になるのです。
今回の場合，学校は各層に4校，4校，2校ですから，この点を考慮する必要があります。
この点は，`fpc`に各層の学校数を指定することで表現できます。

```{r}
# 層化クラスターサンプリング with fpc1
des3 <- survey::svydesign(
  ids = ~sch, strata = ~str, data = samp,
  weights = ~wt, fpc = ~fpc1
)
survey::svymean(~scr, des3)
```

SEが更に小さくなりました。
ただ，`des3`は個々の学校から生徒が無作為に10人抽出されていることを考慮していません。
クラスターサンプリングなので，すべての生徒が調査されているという前提になっています。
実際，`des3`について個々の学校の平均値を算出すると，そのSEはすべて0になります。

```{r}
survey::svyby(~scr, ~sch, des3, survey::svymean)
```

#### 層化多段抽出

個々の学校から生徒を10人ずつ抽出したことを表現するには，
`ids`で学校に加えて生徒を抽出単位に指定する必要があります。
さらに`fpc`も，層だけでなく，個々の学校の生徒数を指定する必要があります。

```{r}
# 層化多段抽出
des4 <- survey::svydesign(
  ids = ~ sch + sid, strata = ~str, data = samp,
  weights = ~wt, fpc = ~ fpc1 + fpc2
)
survey::svymean(~scr, des4)
survey::svyby(~scr, ~sch, des4, survey::svymean)
```

個々の学校から生徒が無作為に抽出されているので，
`des3`に比べてSEが少し大きくなります。
また，学校ごとに平均値を算出すると，学校の規模に応じてSEが算出されます。
なお10番の学校は生徒数が10なので全員が抽出されていることになり，SEは0になっています。


## 事後層化
実際に抽出してみたら，母集団と標本で男女の割合が違った！ということは
よくあります。
今回の標本でも，母集団と男女の比率（と全体の合計）が少しずれています。

```{r}
survey::svytable(~gen, des4)
table(pop$gen)
```

女子の方が成績が高いので，こうしたズレは推定に影響を及ぼすかもしれません。
Complex Surveyでは，母集団の情報を使って，事後的にウェイトを調整することができます。
ここでは大げさ[^2]ですが，`calibrate`関数を使って調整を行います。

[^2]: `calibrate`関数は事後層化より複雑なキャリブレーションを行うことができるのですが，
  ここでは練習のために事後層化に使っています。



```{r}
# 母集団の既知のgender分布を計算
pop_g <- table(gen = pop$gen)
intercept <- sum(pop_g)
genm <- pop_g[[2]]
# Calibrationの実施（genderに基づくキャリブレーション）
population <- c(
  `(Intercept)` = intercept,
  genM = genm
)
des5 <- calib_des <- survey::calibrate(
  des4, # サンプリングデザイン
  formula = ~gen, # キャリブレーションの変数
  population = population
)
survey::svytable(~gen, des5)
survey::svymean(~scr, des5)
```

`des4`はMの割合が多いので，調整したことで推定値が少し高くなりました。また，SEも小さくなっています。

なお，事後層化であれば`postStratify`関数で同じことができます。

```{r}
des6 <- survey::postStratify(des4, ~gen, pop_g)
survey::svytable(~gen, des6)
survey::svymean(~scr, des6)
```
